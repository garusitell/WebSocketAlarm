{"ast":null,"code":"var _jsxFileName = \"/Users/iseonbin/Documents/Prgrammers/demo/frontend/src/components/LoginComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginComponent = ({\n  onLogin\n}) => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    try {\n      const response = await fetch('http://localhost:8080/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        onLogin(data.token); // App.js의 handleLogin 호출\n      } else {\n        const message = await response.text();\n        setError(message);\n      }\n    } catch (err) {\n      setError('로그인 요청에 실패했습니다.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\uC544\\uC774\\uB514 (user1 \\uB610\\uB294 user2)\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638 (pass1 \\uB610\\uB294 pass2)\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginComponent, \"lABZ+K3zbnEaFQvlduiFXLNOf5A=\");\n_c = LoginComponent;\nexport default LoginComponent;\nvar _c;\n$RefreshReg$(_c, \"LoginComponent\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","LoginComponent","onLogin","_s","username","setUsername","password","setPassword","error","setError","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","data","json","token","message","text","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/Users/iseonbin/Documents/Prgrammers/demo/frontend/src/components/LoginComponent.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst LoginComponent = ({ onLogin }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n\n    try {\n      const response = await fetch('http://localhost:8080/login', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, password }),\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        onLogin(data.token); // App.js의 handleLogin 호출\n      } else {\n        const message = await response.text();\n        setError(message);\n      }\n    } catch (err) {\n      setError('로그인 요청에 실패했습니다.');\n    }\n  };\n\n  return (\n    <div className=\"form-container\">\n      <h2>로그인</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"아이디 (user1 또는 user2)\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            required\n          />\n        </div>\n        <div>\n          <input\n            type=\"password\"\n            placeholder=\"비밀번호 (pass1 또는 pass2)\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n        </div>\n        <button type=\"submit\">로그인</button>\n      </form>\n      {error && <p className=\"error\">{error}</p>}\n    </div>\n  );\n};\n\nexport default LoginComponent;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMY,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBH,QAAQ,CAAC,EAAE,CAAC;IAEZ,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;QAC1DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEf,QAAQ;UAAEE;QAAS,CAAC;MAC7C,CAAC,CAAC;MAEF,IAAIO,QAAQ,CAACO,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QAClCpB,OAAO,CAACmB,IAAI,CAACE,KAAK,CAAC,CAAC,CAAC;MACvB,CAAC,MAAM;QACL,MAAMC,OAAO,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;QACrChB,QAAQ,CAACe,OAAO,CAAC;MACnB;IACF,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZjB,QAAQ,CAAC,iBAAiB,CAAC;IAC7B;EACF,CAAC;EAED,oBACET,OAAA;IAAK2B,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7B5B,OAAA;MAAA4B,QAAA,EAAI;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACZhC,OAAA;MAAMiC,QAAQ,EAAEvB,YAAa;MAAAkB,QAAA,gBAC3B5B,OAAA;QAAA4B,QAAA,eACE5B,OAAA;UACEkC,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,+CAAsB;UAClCC,KAAK,EAAEhC,QAAS;UAChBiC,QAAQ,EAAG1B,CAAC,IAAKN,WAAW,CAACM,CAAC,CAAC2B,MAAM,CAACF,KAAK,CAAE;UAC7CG,QAAQ;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNhC,OAAA;QAAA4B,QAAA,eACE5B,OAAA;UACEkC,IAAI,EAAC,UAAU;UACfC,WAAW,EAAC,qDAAuB;UACnCC,KAAK,EAAE9B,QAAS;UAChB+B,QAAQ,EAAG1B,CAAC,IAAKJ,WAAW,CAACI,CAAC,CAAC2B,MAAM,CAACF,KAAK,CAAE;UAC7CG,QAAQ;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNhC,OAAA;QAAQkC,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,EACNxB,KAAK,iBAAIR,OAAA;MAAG2B,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAEpB;IAAK;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEV,CAAC;AAAC7B,EAAA,CAvDIF,cAAc;AAAAuC,EAAA,GAAdvC,cAAc;AAyDpB,eAAeA,cAAc;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}